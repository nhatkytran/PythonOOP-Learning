+++ Immutable Sequence Types +++

--> Sequence types are Iterables, but not all Iterables are Sequence Types

--> Return length of the sequence (technically, no need) --> __len__
--> Given an index, return the element at that index --> __getitem__

__getitem__ --> IndexError
__getitem__ --> supports for loop

--> Custom Sequence Type
__len__
__getitem__

__getiem__ should:
+ return an element for a valid index [0, length - 1]
+ raise an IndexError exception if index is out of bounds

--> Additionally, Custom Sequence Type can support:
+ negative indicies --> i < 0 --> i = length - i
+ slicing --> handle slice objects as argument to __getitem__

+++ Mutable Sequence Types +++

__add__ and __iadd__ and __radd__

__setitem__

--> Restrictions when assigning to slice
+ For any slice we could assign an iterable
+ For extended slices only, both the slice and the iterable \
must have the same length

--> Other operators and functions Sequence Types can support
__contains__ --> in
__delitem__ --> del
__rmul__ --> n * seq

--> The way Python works
a + b
+ First --> a.__add__(b)
+ Second --> b.__radd__(b)

--> Implementing: append, extend, pop
